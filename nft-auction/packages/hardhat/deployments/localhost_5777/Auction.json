{"metadata":"{\"compiler\":{\"version\":\"0.7.6\"},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"pragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\n\\n\\ncontract Auction is IERC721Receiver {\\n    struct tokenDetails {\\n        address seller;\\n        uint128 price;\\n        uint256 duration;\\n        uint256 maxBid;\\n        address maxBidUser;\\n        bool isActive;\\n        uint256[] bidAmounts;\\n        address[] users;\\n    }\\n\\n    mapping(address => mapping(uint256 => tokenDetails)) public tokenToAuction;\\n\\n    mapping(address => mapping(uint256 => mapping(address => uint256))) public bids;\\n    \\n    /**\\n       Seller puts the item on auction\\n    */\\n    function createTokenAuction(\\n        address _nft,\\n        uint256 _tokenId,\\n        uint128 _price,\\n        uint256 _duration\\n    ) external {\\n        require(msg.sender != address(0), \\\"Invalid Address\\\");\\n        require(_nft != address(0), \\\"Invalid Account\\\");\\n        require(_price > 0, \\\"Price should be more than 0\\\");\\n        require(_duration > 0, \\\"Invalid duration value\\\");\\n        tokenDetails memory _auction = tokenDetails({\\n            seller: msg.sender,\\n            price: uint128(_price),\\n            duration: _duration,\\n            maxBid: 0,\\n            maxBidUser: address(0),\\n            isActive: true,\\n            bidAmounts: new uint256[](0),\\n            users: new address[](0)\\n        });\\n        address owner = msg.sender;\\n        ERC721(_nft).safeTransferFrom(owner, address(this), _tokenId);\\n        tokenToAuction[_nft][_tokenId] = _auction;\\n    }\\n    /**\\n       Users bid for a particular nft, the max bid is compared and set if the current bid id highest\\n    */\\n    function bid(address _nft, uint256 _tokenId) external payable {\\n        tokenDetails storage auction = tokenToAuction[_nft][_tokenId];\\n        require(msg.value >= auction.price, \\\"bid price is less than current price\\\");\\n        require(auction.isActive, \\\"auction not active\\\");\\n        require(auction.duration > block.timestamp, \\\"Deadline already passed\\\");\\n        if (bids[_nft][_tokenId][msg.sender] > 0) {\\n            (bool success, ) = msg.sender.call{value: bids[_nft][_tokenId][msg.sender]}(\\\"\\\");\\n            require(success);\\n        }\\n        bids[_nft][_tokenId][msg.sender] = msg.value;\\n        if (auction.bidAmounts.length == 0) {\\n            auction.maxBid = msg.value;\\n            auction.maxBidUser = msg.sender;\\n        } else {\\n            uint256 lastIndex = auction.bidAmounts.length - 1;\\n            require(auction.bidAmounts[lastIndex] < msg.value, \\\"Current max bid is higher than your bid\\\");\\n            auction.maxBid = msg.value;\\n            auction.maxBidUser = msg.sender;\\n        }\\n        auction.users.push(msg.sender);\\n        auction.bidAmounts.push(msg.value);\\n    }\\n    /**\\n       Called by the seller when the auction duration is over the hightest bid user get's the nft and other bidders get eth back\\n    */\\n    function executeSale(address _nft, uint256 _tokenId) external {\\n        tokenDetails storage auction = tokenToAuction[_nft][_tokenId];\\n        require(auction.duration <= block.timestamp, \\\"Deadline did not pass yet\\\");\\n        require(auction.seller == msg.sender, \\\"Not seller\\\");\\n        require(auction.isActive, \\\"auction not active\\\");\\n        auction.isActive = false;\\n        if (auction.bidAmounts.length == 0) {\\n            ERC721(_nft).safeTransferFrom(\\n                address(this),\\n                auction.seller,\\n                _tokenId\\n            );\\n        } else {\\n            (bool success, ) = auction.seller.call{value: auction.maxBid}(\\\"\\\");\\n            require(success);\\n            for (uint256 i = 0; i < auction.users.length; i++) {\\n                if (auction.users[i] != auction.maxBidUser) {\\n                    (success, ) = auction.users[i].call{\\n                        value: bids[_nft][_tokenId][auction.users[i]]\\n                    }(\\\"\\\");\\n                    require(success);\\n                }\\n            }\\n            ERC721(_nft).safeTransferFrom(\\n                address(this),\\n                auction.maxBidUser,\\n                _tokenId\\n            );\\n        }\\n    }\\n\\n    /**\\n       Called by the seller if they want to cancel the auction for their nft so the bidders get back the locked eeth and the seller get's back the nft\\n    */\\n    function cancelAuction(address _nft, uint256 _tokenId) external {\\n        tokenDetails storage auction = tokenToAuction[_nft][_tokenId];\\n        require(auction.seller == msg.sender, \\\"Not seller\\\");\\n        require(auction.isActive, \\\"auction not active\\\");\\n        auction.isActive = false;\\n        bool success;\\n        for (uint256 i = 0; i < auction.users.length; i++) {\\n        (success, ) = auction.users[i].call{value: bids[_nft][_tokenId][auction.users[i]]}(\\\"\\\");        \\n        require(success);\\n        }\\n        ERC721(_nft).safeTransferFrom(address(this), auction.seller, _tokenId);\\n    }\\n\\n    function getTokenAuctionDetails(address _nft, uint256 _tokenId) public view returns (tokenDetails memory) {\\n        tokenDetails memory auction = tokenToAuction[_nft][_tokenId];\\n        return auction;\\n    }\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    )external override returns(bytes4) {\\n        return bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"));\\n    }\\n\\n    receive() external payable {}\\n}\\n\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\"}}}","address":"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512","bytecode":"0x608060405234801561001057600080fd5b5061145c806100206000396000f3fe60806040526004361061007f5760003560e01c80637bed72321161004e5780637bed723214610135578063859b97fe14610155578063cf680c6914610175578063dd7689221461019557610086565b8063150b7a021461008b57806359d667a5146100c1578063722565c5146100d65780637792ba5f1461010357610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610ed3565b6101c2565b6040516100b8919061111a565b60405180910390f35b6100d46100cf366004610f69565b6101ec565b005b3480156100e257600080fd5b506100f66100f1366004610f69565b610462565b6040516100b89190611331565b34801561010f57600080fd5b5061012361011e366004610f69565b6105a4565b6040516100b8969594939291906110d6565b34801561014157600080fd5b506100d4610150366004610f69565b6105fc565b34801561016157600080fd5b506100d4610170366004610f69565b61096c565b34801561018157600080fd5b506100d4610190366004610fcd565b610b44565b3480156101a157600080fd5b506101b56101b0366004610f92565b610d7d565b6040516100b891906113d5565b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f95945050505050565b6001600160a01b038216600090815260208181526040808320848452909152902060018101546001600160801b03163410156102435760405162461bcd60e51b815260040161023a906112c1565b60405180910390fd5b6004810154600160a01b900460ff1661026e5760405162461bcd60e51b815260040161023a90611305565b428160020154116102915760405162461bcd60e51b815260040161023a9061128a565b6001600160a01b038316600090815260016020908152604080832085845282528083203384529091529020541561034c576001600160a01b038316600090815260016020908152604080832085845282528083203380855292528083205490516102fa906110af565b60006040518083038185875af1925050503d8060008114610337576040519150601f19603f3d011682016040523d82523d6000602084013e61033c565b606091505b505090508061034a57600080fd5b505b6001600160a01b03831660009081526001602090815260408083208584528252808320338452909152902034905560058101546103a2573460038201556004810180546001600160a01b03191633179055610420565b60058101546000906103b6906001906113de565b9050348260050182815481106103dc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154106104045760405162461bcd60e51b815260040161023a9061115f565b503460038201556004810180546001600160a01b031916331790555b600681018054600181810183556000928352602080842090920180546001600160a01b0319163317905560059093018054938401815582529020349101555050565b61046a610da0565b6001600160a01b03838116600090815260208181526040808320868452825280832081516101008101835281548616815260018201546001600160801b0316818501526002820154818401526003820154606082015260048201549586166080820152600160a01b90950460ff16151560a0860152600581018054835181860281018601909452808452949594919360c0860193929083018282801561052f57602002820191906000526020600020905b81548152602001906001019080831161051b575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561059157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610573575b5050509190925250919695505050505050565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401546001600160a01b03938416946001600160801b0390931693919291811690600160a01b900460ff1686565b6001600160a01b038216600090815260208181526040808320848452909152902060028101544210156106415760405162461bcd60e51b815260040161023a9061122f565b80546001600160a01b0316331461066a5760405162461bcd60e51b815260040161023a90611266565b6004810154600160a01b900460ff166106955760405162461bcd60e51b815260040161023a90611305565b60048101805460ff60a01b191690556005810154610717578054604051632142170760e11b81526001600160a01b03808616926342842e0e926106e0923092169087906004016110b2565b600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b50505050610967565b805460038201546040516000926001600160a01b03169190610738906110af565b60006040518083038185875af1925050503d8060008114610775576040519150601f19603f3d011682016040523d82523d6000602084013e61077a565b606091505b505090508061078857600080fd5b60005b60068301548110156108fb5760048301546006840180546001600160a01b0390921691839081106107cc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316146108e95782600601818154811061080957634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b038881168452600183526040808520898652909352918320600687018054939092169390929091908590811061086457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040908101909120549051610897906110af565b60006040518083038185875af1925050503d80600081146108d4576040519150601f19603f3d011682016040523d82523d6000602084013e6108d9565b606091505b505080925050816108e957600080fd5b806108f3816113f5565b91505061078b565b50600482810154604051632142170760e11b81526001600160a01b03878116936342842e0e93610933933093909116918991016110b2565b600060405180830381600087803b15801561094d57600080fd5b505af1158015610961573d6000803e3d6000fd5b50505050505b505050565b6001600160a01b038083166000908152602081815260408083208584529091529020805490911633146109b15760405162461bcd60e51b815260040161023a90611266565b6004810154600160a01b900460ff166109dc5760405162461bcd60e51b815260040161023a90611305565b60048101805460ff60a01b191690556000805b6006830154811015610b1057826006018181548110610a1e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0388811684526001835260408085208986529093529183206006870180549390921693909290919085908110610a7957634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040908101909120549051610aac906110af565b60006040518083038185875af1925050503d8060008114610ae9576040519150601f19603f3d011682016040523d82523d6000602084013e610aee565b606091505b50508092505081610afe57600080fd5b80610b08816113f5565b9150506109ef565b508154604051632142170760e11b81526001600160a01b03808716926342842e0e92610933923092169088906004016110b2565b33610b615760405162461bcd60e51b815260040161023a90611206565b6001600160a01b038416610b875760405162461bcd60e51b815260040161023a906111dd565b6000826001600160801b031611610bb05760405162461bcd60e51b815260040161023a906111a6565b60008111610bd05760405162461bcd60e51b815260040161023a9061112f565b6040805161010081018252338082526001600160801b03851660208084019190915282840185905260006060840181905260808401819052600160a08501528451818152808301865260c08501528451908152908101845260e08301529151632142170760e11b81529091906001600160a01b038716906342842e0e90610c5f90849030908a906004016110b2565b600060405180830381600087803b158015610c7957600080fd5b505af1158015610c8d573d6000803e3d6000fd5b5050506001600160a01b038088166000908152602081815260408083208a8452825291829020865181549085166001600160a01b0319918216178255828801516001830180546001600160801b039092166fffffffffffffffffffffffffffffffff1990921691909117905592870151600282015560608701516003820155608087015160048201805460a08a01511515600160a01b0260ff60a01b1993909716951694909417169390931790915560c08501518051869450610d569260058501920190610e02565b5060e08201518051610d72916006840191602090910190610e4d565b505050505050505050565b600160209081526000938452604080852082529284528284209052825290205481565b60405180610100016040528060006001600160a01b0316815260200160006001600160801b03168152602001600081526020016000815260200160006001600160a01b0316815260200160001515815260200160608152602001606081525090565b828054828255906000526020600020908101928215610e3d579160200282015b82811115610e3d578251825591602001919060010190610e22565b50610e49929150610ea2565b5090565b828054828255906000526020600020908101928215610e3d579160200282015b82811115610e3d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e6d565b5b80821115610e495760008155600101610ea3565b80356001600160a01b0381168114610ece57600080fd5b919050565b600080600080600060808688031215610eea578081fd5b610ef386610eb7565b9450610f0160208701610eb7565b935060408601359250606086013567ffffffffffffffff80821115610f24578283fd5b818801915088601f830112610f37578283fd5b813581811115610f45578384fd5b896020828501011115610f56578384fd5b9699959850939650602001949392505050565b60008060408385031215610f7b578182fd5b610f8483610eb7565b946020939093013593505050565b600080600060608486031215610fa6578283fd5b610faf84610eb7565b925060208401359150610fc460408501610eb7565b90509250925092565b60008060008060808587031215610fe2578384fd5b610feb85610eb7565b93506020850135925060408501356001600160801b038116811461100d578283fd5b9396929550929360600135925050565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156110625781516001600160a01b03168752958201959082019060010161103d565b509495945050505050565b6000815180845260208085019450808401835b8381101561106257815187529582019590820190600101611080565b15159052565b6001600160801b03169052565b90565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0396871681526001600160801b0395909516602086015260408501939093526060840191909152909216608082015290151560a082015260c00190565b6001600160e01b031991909116815260200190565b602080825260169082015275496e76616c6964206475726174696f6e2076616c756560501b604082015260600190565b60208082526027908201527f43757272656e74206d61782062696420697320686967686572207468616e20796040820152661bdd5c88189a5960ca1b606082015260800190565b6020808252601b908201527f50726963652073686f756c64206265206d6f7265207468616e20300000000000604082015260600190565b6020808252600f908201526e125b9d985b1a59081058d8dbdd5b9d608a1b604082015260600190565b6020808252600f908201526e496e76616c6964204164647265737360881b604082015260600190565b60208082526019908201527f446561646c696e6520646964206e6f7420706173732079657400000000000000604082015260600190565b6020808252600a90820152692737ba1039b2b63632b960b11b604082015260600190565b60208082526017908201527f446561646c696e6520616c726561647920706173736564000000000000000000604082015260600190565b60208082526024908201527f626964207072696365206973206c657373207468616e2063757272656e7420706040820152637269636560e01b606082015260800190565b60208082526012908201527161756374696f6e206e6f742061637469766560701b604082015260600190565b602080825282516001600160a01b03168282015282015160009061135860408401826110a2565b506040830151606083015260608301516080830152608083015161137f60a084018261101d565b5060a083015161139260c084018261109c565b5060c08301516101008060e08501526113af61012085018361106d565b915060e0850151601f1985840301828601526113cb838261102a565b9695505050505050565b90815260200190565b6000828210156113f0576113f0611410565b500390565b600060001982141561140957611409611410565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e9a819bc205ba6cfda7b6c4e7d693d8e2d57a00d067071f934718516c26d372b64736f6c63430008000033","deployedBytecode":"0x60806040526004361061007f5760003560e01c80637bed72321161004e5780637bed723214610135578063859b97fe14610155578063cf680c6914610175578063dd7689221461019557610086565b8063150b7a021461008b57806359d667a5146100c1578063722565c5146100d65780637792ba5f1461010357610086565b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610ed3565b6101c2565b6040516100b8919061111a565b60405180910390f35b6100d46100cf366004610f69565b6101ec565b005b3480156100e257600080fd5b506100f66100f1366004610f69565b610462565b6040516100b89190611331565b34801561010f57600080fd5b5061012361011e366004610f69565b6105a4565b6040516100b8969594939291906110d6565b34801561014157600080fd5b506100d4610150366004610f69565b6105fc565b34801561016157600080fd5b506100d4610170366004610f69565b61096c565b34801561018157600080fd5b506100d4610190366004610fcd565b610b44565b3480156101a157600080fd5b506101b56101b0366004610f92565b610d7d565b6040516100b891906113d5565b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f95945050505050565b6001600160a01b038216600090815260208181526040808320848452909152902060018101546001600160801b03163410156102435760405162461bcd60e51b815260040161023a906112c1565b60405180910390fd5b6004810154600160a01b900460ff1661026e5760405162461bcd60e51b815260040161023a90611305565b428160020154116102915760405162461bcd60e51b815260040161023a9061128a565b6001600160a01b038316600090815260016020908152604080832085845282528083203384529091529020541561034c576001600160a01b038316600090815260016020908152604080832085845282528083203380855292528083205490516102fa906110af565b60006040518083038185875af1925050503d8060008114610337576040519150601f19603f3d011682016040523d82523d6000602084013e61033c565b606091505b505090508061034a57600080fd5b505b6001600160a01b03831660009081526001602090815260408083208584528252808320338452909152902034905560058101546103a2573460038201556004810180546001600160a01b03191633179055610420565b60058101546000906103b6906001906113de565b9050348260050182815481106103dc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154106104045760405162461bcd60e51b815260040161023a9061115f565b503460038201556004810180546001600160a01b031916331790555b600681018054600181810183556000928352602080842090920180546001600160a01b0319163317905560059093018054938401815582529020349101555050565b61046a610da0565b6001600160a01b03838116600090815260208181526040808320868452825280832081516101008101835281548616815260018201546001600160801b0316818501526002820154818401526003820154606082015260048201549586166080820152600160a01b90950460ff16151560a0860152600581018054835181860281018601909452808452949594919360c0860193929083018282801561052f57602002820191906000526020600020905b81548152602001906001019080831161051b575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561059157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610573575b5050509190925250919695505050505050565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401546001600160a01b03938416946001600160801b0390931693919291811690600160a01b900460ff1686565b6001600160a01b038216600090815260208181526040808320848452909152902060028101544210156106415760405162461bcd60e51b815260040161023a9061122f565b80546001600160a01b0316331461066a5760405162461bcd60e51b815260040161023a90611266565b6004810154600160a01b900460ff166106955760405162461bcd60e51b815260040161023a90611305565b60048101805460ff60a01b191690556005810154610717578054604051632142170760e11b81526001600160a01b03808616926342842e0e926106e0923092169087906004016110b2565b600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b50505050610967565b805460038201546040516000926001600160a01b03169190610738906110af565b60006040518083038185875af1925050503d8060008114610775576040519150601f19603f3d011682016040523d82523d6000602084013e61077a565b606091505b505090508061078857600080fd5b60005b60068301548110156108fb5760048301546006840180546001600160a01b0390921691839081106107cc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316146108e95782600601818154811061080957634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b038881168452600183526040808520898652909352918320600687018054939092169390929091908590811061086457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040908101909120549051610897906110af565b60006040518083038185875af1925050503d80600081146108d4576040519150601f19603f3d011682016040523d82523d6000602084013e6108d9565b606091505b505080925050816108e957600080fd5b806108f3816113f5565b91505061078b565b50600482810154604051632142170760e11b81526001600160a01b03878116936342842e0e93610933933093909116918991016110b2565b600060405180830381600087803b15801561094d57600080fd5b505af1158015610961573d6000803e3d6000fd5b50505050505b505050565b6001600160a01b038083166000908152602081815260408083208584529091529020805490911633146109b15760405162461bcd60e51b815260040161023a90611266565b6004810154600160a01b900460ff166109dc5760405162461bcd60e51b815260040161023a90611305565b60048101805460ff60a01b191690556000805b6006830154811015610b1057826006018181548110610a1e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0388811684526001835260408085208986529093529183206006870180549390921693909290919085908110610a7957634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040908101909120549051610aac906110af565b60006040518083038185875af1925050503d8060008114610ae9576040519150601f19603f3d011682016040523d82523d6000602084013e610aee565b606091505b50508092505081610afe57600080fd5b80610b08816113f5565b9150506109ef565b508154604051632142170760e11b81526001600160a01b03808716926342842e0e92610933923092169088906004016110b2565b33610b615760405162461bcd60e51b815260040161023a90611206565b6001600160a01b038416610b875760405162461bcd60e51b815260040161023a906111dd565b6000826001600160801b031611610bb05760405162461bcd60e51b815260040161023a906111a6565b60008111610bd05760405162461bcd60e51b815260040161023a9061112f565b6040805161010081018252338082526001600160801b03851660208084019190915282840185905260006060840181905260808401819052600160a08501528451818152808301865260c08501528451908152908101845260e08301529151632142170760e11b81529091906001600160a01b038716906342842e0e90610c5f90849030908a906004016110b2565b600060405180830381600087803b158015610c7957600080fd5b505af1158015610c8d573d6000803e3d6000fd5b5050506001600160a01b038088166000908152602081815260408083208a8452825291829020865181549085166001600160a01b0319918216178255828801516001830180546001600160801b039092166fffffffffffffffffffffffffffffffff1990921691909117905592870151600282015560608701516003820155608087015160048201805460a08a01511515600160a01b0260ff60a01b1993909716951694909417169390931790915560c08501518051869450610d569260058501920190610e02565b5060e08201518051610d72916006840191602090910190610e4d565b505050505050505050565b600160209081526000938452604080852082529284528284209052825290205481565b60405180610100016040528060006001600160a01b0316815260200160006001600160801b03168152602001600081526020016000815260200160006001600160a01b0316815260200160001515815260200160608152602001606081525090565b828054828255906000526020600020908101928215610e3d579160200282015b82811115610e3d578251825591602001919060010190610e22565b50610e49929150610ea2565b5090565b828054828255906000526020600020908101928215610e3d579160200282015b82811115610e3d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e6d565b5b80821115610e495760008155600101610ea3565b80356001600160a01b0381168114610ece57600080fd5b919050565b600080600080600060808688031215610eea578081fd5b610ef386610eb7565b9450610f0160208701610eb7565b935060408601359250606086013567ffffffffffffffff80821115610f24578283fd5b818801915088601f830112610f37578283fd5b813581811115610f45578384fd5b896020828501011115610f56578384fd5b9699959850939650602001949392505050565b60008060408385031215610f7b578182fd5b610f8483610eb7565b946020939093013593505050565b600080600060608486031215610fa6578283fd5b610faf84610eb7565b925060208401359150610fc460408501610eb7565b90509250925092565b60008060008060808587031215610fe2578384fd5b610feb85610eb7565b93506020850135925060408501356001600160801b038116811461100d578283fd5b9396929550929360600135925050565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156110625781516001600160a01b03168752958201959082019060010161103d565b509495945050505050565b6000815180845260208085019450808401835b8381101561106257815187529582019590820190600101611080565b15159052565b6001600160801b03169052565b90565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0396871681526001600160801b0395909516602086015260408501939093526060840191909152909216608082015290151560a082015260c00190565b6001600160e01b031991909116815260200190565b602080825260169082015275496e76616c6964206475726174696f6e2076616c756560501b604082015260600190565b60208082526027908201527f43757272656e74206d61782062696420697320686967686572207468616e20796040820152661bdd5c88189a5960ca1b606082015260800190565b6020808252601b908201527f50726963652073686f756c64206265206d6f7265207468616e20300000000000604082015260600190565b6020808252600f908201526e125b9d985b1a59081058d8dbdd5b9d608a1b604082015260600190565b6020808252600f908201526e496e76616c6964204164647265737360881b604082015260600190565b60208082526019908201527f446561646c696e6520646964206e6f7420706173732079657400000000000000604082015260600190565b6020808252600a90820152692737ba1039b2b63632b960b11b604082015260600190565b60208082526017908201527f446561646c696e6520616c726561647920706173736564000000000000000000604082015260600190565b60208082526024908201527f626964207072696365206973206c657373207468616e2063757272656e7420706040820152637269636560e01b606082015260800190565b60208082526012908201527161756374696f6e206e6f742061637469766560701b604082015260600190565b602080825282516001600160a01b03168282015282015160009061135860408401826110a2565b506040830151606083015260608301516080830152608083015161137f60a084018261101d565b5060a083015161139260c084018261109c565b5060c08301516101008060e08501526113af61012085018361106d565b915060e0850151601f1985840301828601526113cb838261102a565b9695505050505050565b90815260200190565b6000828210156113f0576113f0611410565b500390565b600060001982141561140957611409611410565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e9a819bc205ba6cfda7b6c4e7d693d8e2d57a00d067071f934718516c26d372b64736f6c63430008000033","abi":[{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"bid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"bids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"cancelAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint128","name":"_price","type":"uint128"},{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"createTokenAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"executeSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"getTokenAuctionDetails","outputs":[{"components":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint128","name":"price","type":"uint128"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"maxBid","type":"uint256"},{"internalType":"address","name":"maxBidUser","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256[]","name":"bidAmounts","type":"uint256[]"},{"internalType":"address[]","name":"users","type":"address[]"}],"internalType":"struct Auction.tokenDetails","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenToAuction","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint128","name":"price","type":"uint128"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"maxBid","type":"uint256"},{"internalType":"address","name":"maxBidUser","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]}