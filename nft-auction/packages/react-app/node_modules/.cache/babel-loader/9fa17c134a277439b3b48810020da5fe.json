{"ast":null,"code":"var _jsxFileName = \"/Users/andrebacellardemiranda/nft-auction/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { LinkOutlined } from \"@ant-design/icons\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Input, List, Card, Switch as SwitchD, Modal, InputNumber, Tooltip } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { format } from \"date-fns\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address, AddressInput, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { utils, constants } from \"ethers\"; //import Hints from \"./Hints\";\n\nimport { Hints, ExampleUI, Subgraph } from \"./views\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nimport StackGrid from \"react-stack-grid\";\nimport ReactJson from 'react-json-view';\nimport assets from './assets.js';\n\nconst {\n  BufferList\n} = require('bl'); // https://www.npmjs.com/package/ipfs-http-client\n\n\nconst ipfsAPI = require('ipfs-http-client');\n\nconst ipfs = ipfsAPI({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\nconsole.log(\"üì¶ Assets: \", assets);\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = false; //EXAMPLE STARTING JSON:\n\nconst STARTING_JSON = {\n  \"description\": \"It's actually a bison?\",\n  \"external_url\": \"https://austingriffith.com/portfolio/paintings/\",\n  // <-- this can link to a page for the specific file too\n  \"image\": \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  \"name\": \"Buffalo\",\n  \"attributes\": [{\n    \"trait_type\": \"BackgroundColor\",\n    \"value\": \"green\"\n  }, {\n    \"trait_type\": \"Eyes\",\n    \"value\": \"googly\"\n  }]\n}; //helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n\n    console.log(content);\n    return content;\n  }\n}; // üõ∞ providers\n\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  if (DEBUG) console.log(\"üåé mainnetProvider\", mainnetProvider);\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if (DEBUG) console.log(\"üë©‚Äçüíº selected address:\", address); // You can warn the user if you would like them to be on a specific network\n\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  if (DEBUG) console.log(\"üè† localChainId\", localChainId);\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n  if (DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId); // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if (DEBUG) console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\"); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"üìù readContracts\", readContracts); // If you want to make üîê write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"üîê writeContracts\", writeContracts); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI);\n  if (DEBUG) console.log(\"üåç DAI contract on mainnet:\", mainnetDAIContract); //\n  // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader({\n    DAI: mainnetDAIContract\n  }, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);\n  if (DEBUG) console.log(\"ü•á myMainnetDAIBalance:\", myMainnetDAIBalance); // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  if (DEBUG) console.log(\"ü§ó balance:\", balance); //üìü Listen for broadcast events\n\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  if (DEBUG) console.log(\"üìü Transfer events:\", transferEvents);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [viewModalVisible, setViewModalVisible] = useState(false);\n  const [auctionDetails, setAuctionDetails] = useState({\n    price: \"\",\n    duration: \"\"\n  });\n  const [auctionToken, setAuctionToken] = useState(\"\");\n  const [viewAuctionToken, setViewAuctionToken] = useState(\"\"); //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState(); // useEffect(()=>{\n  //   const updateYourCollectibles = async () => {\n  //     let collectibleUpdate = []\n  //     for(let tokenIndex=0;tokenIndex<balance;tokenIndex++){\n  //       try{\n  //         console.log(\"GEtting token index\",tokenIndex)\n  //         const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex)\n  //         console.log(\"tokenId\",tokenId)\n  //         const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId)\n  //         console.log(\"tokenURI\",tokenURI)\n  //\n  //         const ipfsHash =  tokenURI.replace(\"https://ipfs.io/ipfs/\",\"\")\n  //         console.log(\"ipfsHash\",ipfsHash)\n  //\n  //         const jsonManifestBuffer = await getFromIPFS(ipfsHash)\n  //\n  //         try{\n  //           const jsonManifest = JSON.parse(jsonManifestBuffer.toString())\n  //           // console.log(\"jsonManifest\",jsonManifest)\n  //           collectibleUpdate.push({ id:tokenId, uri:tokenURI, owner: address, ...jsonManifest })\n  //         }catch(e){console.log(e)}\n  //\n  //       }catch(e){console.log(e)}\n  //     }\n  //     setYourCollectibles(collectibleUpdate)\n  //   }\n  //   updateYourCollectibles()\n  // },[ address, yourBalance ])\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  let networkDisplay = \"\";\n\n  if (localChainId && selectedChainId && localChainId != selectedChainId) {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 2,\n        position: 'absolute',\n        right: 0,\n        top: 60,\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      message: \"‚ö†Ô∏è Wrong Network\",\n      description: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 24\n        }\n      }, NETWORK(selectedChainId).name), \" selected and you need to be on \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 94\n        }\n      }, NETWORK(localChainId).name), \".\"),\n      type: \"error\",\n      closable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: -1,\n        position: 'absolute',\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname) >= 0 && !process.env.REACT_APP_PROVIDER && price > 1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [yourBid, setYourBid] = useState({});\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [loadedAssets, setLoadedAssets] = useState();\n\n  const updateYourCollectibles = async () => {\n    let assetUpdate = [];\n\n    for (let a in assets) {\n      try {\n        const forSale = await readContracts.YourCollectible.forSale(utils.id(a));\n        let owner;\n        let auctionInfo;\n\n        if (!forSale) {\n          const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(a));\n          owner = await readContracts.YourCollectible.ownerOf(tokenId);\n          const nftAddress = readContracts.YourCollectible.address;\n          auctionInfo = await readContracts.Auction.getTokenAuctionDetails(nftAddress, tokenId);\n        }\n\n        assetUpdate.push({\n          id: a,\n          ...assets[a],\n          forSale: forSale,\n          owner: owner,\n          auctionInfo\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    setLoadedAssets(assetUpdate);\n  };\n\n  useEffect(() => {\n    if (readContracts && readContracts.YourCollectible) updateYourCollectibles();\n  }, [assets, readContracts, transferEvents]);\n\n  const startAuction = tokenUri => {\n    return async () => {\n      setAuctionToken(tokenUri);\n      setModalVisible(true);\n    };\n  };\n\n  const placeBid = async (tokenUri, ethAmount) => {\n    const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n    const nftAddress = readContracts.YourCollectible.address;\n    await tx(writeContracts.Auction.bid(nftAddress, tokenId, {\n      value: parseEther(ethAmount.toString())\n    }));\n    updateYourCollectibles();\n  };\n\n  const completeAuction = tokenUri => {\n    return async () => {\n      const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n      const nftAddress = readContracts.YourCollectible.address;\n      await tx(writeContracts.Auction.executeSale(nftAddress, tokenId));\n      updateYourCollectibles();\n    };\n  };\n\n  const cancelAuction = tokenUri => {\n    return async () => {\n      const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n      const nftAddress = readContracts.YourCollectible.address;\n      await tx(writeContracts.Auction.cancelAution(nftAddress, tokenId));\n      updateYourCollectibles();\n    };\n  };\n\n  let galleryList = [];\n\n  for (let a in loadedAssets ? loadedAssets.slice(0, 6) : []) {\n    // console.log(\"loadedAssets\",a,loadedAssets[a])\n    let cardActions = [];\n    let auctionDetails = [];\n\n    if (loadedAssets[a].forSale) {\n      cardActions.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          // console.log(\"gasPrice,\",gasPrice)\n          tx(writeContracts.YourCollectible.mintItem(loadedAssets[a].id, {\n            gasPrice: gasPrice\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, \"Mint\")));\n      auctionDetails.push(null);\n    } else {\n      const {\n        auctionInfo\n      } = loadedAssets[a];\n      const deadline = new Date(auctionInfo.duration * 1000);\n      const isEnded = deadline <= new Date();\n      cardActions.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }\n      }, \"owned by: \", /*#__PURE__*/React.createElement(Address, {\n        address: loadedAssets[a].owner,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        minimized: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      })), !loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].owner && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginBottom: \"10px\"\n        },\n        onClick: startAuction(loadedAssets[a].id),\n        disabled: address !== loadedAssets[a].owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 92\n        }\n      }, \"Start auction\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 243\n        }\n      })), loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].auctionInfo.seller && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginBottom: \"10px\"\n        },\n        onClick: completeAuction(loadedAssets[a].id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 104\n        }\n      }, \"Complete auction\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 216\n        }\n      })), loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].auctionInfo.seller && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginBottom: \"10px\"\n        },\n        onClick: cancelAuction(loadedAssets[a].id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 104\n        }\n      }, \"Cancel auction\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 212\n        }\n      }))));\n      auctionDetails.push(auctionInfo.isActive ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }\n      }, \"Auction is in progress\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margin: 0,\n          marginBottom: \"2px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }\n      }, \"Minimal price is \", utils.formatEther(auctionInfo.price), \" ETH\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          marginTop: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }\n      }, !isEnded ? `Auction ends at ${format(deadline, \"MMMM dd, hh:mm:ss\")}` : 'Auction has already ended'), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }\n      }, auctionInfo.maxBidUser === constants.AddressZero ? \"Highest bid was not made yet\" : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 100\n        }\n      }, \"Highest bid by: \", /*#__PURE__*/React.createElement(Address, {\n        address: auctionInfo.maxBidUser,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        minimized: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 121\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, utils.formatEther(auctionInfo.maxBid), \" ETH\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margin: 0,\n          marginRight: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }\n      }, \"Your bid in ETH: \"), /*#__PURE__*/React.createElement(InputNumber, {\n        placeholder: \"0.1\",\n        value: yourBid[loadedAssets[a].id],\n        onChange: newBid => setYourBid({ ...yourBid,\n          [loadedAssets[a].id]: newBid\n        }),\n        style: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginTop: \"7px\"\n        },\n        onClick: () => placeBid(loadedAssets[a].id, yourBid[loadedAssets[a].id]),\n        disabled: !yourBid[loadedAssets[a].id] || isEnded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }\n      }, \"Place a bid\"))) : null);\n    }\n\n    galleryList.push( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: 300\n      },\n      key: loadedAssets[a].name,\n      actions: cardActions,\n      title: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }\n      }, loadedAssets[a].name, \" \", /*#__PURE__*/React.createElement(\"a\", {\n        style: {\n          cursor: \"pointer\",\n          opacity: 0.33\n        },\n        href: loadedAssets[a].external_url,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(LinkOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 131\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxWidth: 130\n      },\n      src: loadedAssets[a].image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        opacity: 0.77\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    }, loadedAssets[a].description), auctionDetails)));\n  }\n\n  const handleOk = async () => {\n    setModalVisible(false);\n    const {\n      price,\n      duration\n    } = auctionDetails;\n    const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(auctionToken));\n    const auctionAddress = readContracts.Auction.address;\n    const nftAddress = readContracts.YourCollectible.address;\n    await writeContracts.YourCollectible.approve(auctionAddress, tokenId);\n    const ethPrice = utils.parseEther(price.toString());\n    const blockDuration = Math.floor(new Date().getTime() / 1000) + duration;\n    await tx(writeContracts.Auction.createTokenAuction(nftAddress, tokenId, ethPrice, blockDuration, {\n      gasPrice\n    }));\n    const auctionInfo = await readContracts.Auction.getTokenAuctionDetails(nftAddress, tokenId);\n    console.log('auctionInfo', {\n      auctionInfo\n    });\n  };\n\n  const handleCancel = () => {\n    setModalVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    title: \"Start auction\",\n    visible: modalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    okButtonProps: {\n      disabled: !auctionDetails.price || !auctionDetails.duration\n    },\n    okText: \"Start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      marginRight: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }, \"ETH price (minimal bid): \"), /*#__PURE__*/React.createElement(InputNumber, {\n    placeholder: \"0.1\",\n    value: auctionDetails.price,\n    onChange: newPrice => setAuctionDetails({ ...auctionDetails,\n      price: newPrice\n    }),\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      marginRight: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, \"Duration in seconds: \"), /*#__PURE__*/React.createElement(InputNumber, {\n    placeholder: \"3600\",\n    value: auctionDetails.duration,\n    onChange: newDuration => setAuctionDetails({ ...auctionDetails,\n      duration: newDuration\n    }),\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }\n  }), networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }, \"Gallery\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/debugcontracts\");\n    },\n    to: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }\n  }, \"Debug Contracts\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 1024,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 56\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: galleryList.length === 0,\n    onClick: updateYourCollectibles,\n    style: {\n      marginBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 15\n    }\n  }, \"Update collectibles\"), /*#__PURE__*/React.createElement(StackGrid, {\n    columnWidth: 300,\n    gutterWidth: 16,\n    gutterHeight: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  }, galleryList))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/yourcollectibles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: yourCollectibles,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 27\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 25\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 23\n        }\n      }, \"owner: \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: mainnetProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          let update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 25\n        }\n      }, \"Transfer\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: transferEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 16,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 23\n        }\n      }, \"#\", item[2].toNumber()), /*#__PURE__*/React.createElement(Address, {\n        address: item[0],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }\n      }), \" =>\", /*#__PURE__*/React.createElement(Address, {\n        address: item[1],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactJson, {\n    style: {\n      padding: 8\n    },\n    src: yourJSON,\n    theme: \"pop\",\n    enableClipboard: false,\n    onEdit: (edit, a) => {\n      setYourJSON(edit.updated_src);\n    },\n    onAdd: (add, a) => {\n      setYourJSON(add.updated_src);\n    },\n    onDelete: (del, a) => {\n      setYourJSON(del.updated_src);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"UPLOADING...\", yourJSON);\n      setSending(true);\n      setIpfsHash();\n      const result = await ipfs.add(JSON.stringify(yourJSON)); //addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.path) {\n        setIpfsHash(result.path);\n      }\n\n      setSending(false);\n      console.log(\"RESULT:\", result);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  }, \"Upload to IPFS\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 16,\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }\n  }, ipfsHash)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: ipfsDownHash,\n    placeHolder: \"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\",\n    onChange: e => {\n      setIpfsDownHash(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"DOWNLOADING...\", ipfsDownHash);\n      setDownloading(true);\n      setIpfsContent();\n      const result = await getFromIPFS(ipfsDownHash); //addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.toString) {\n        setIpfsContent(result.toString());\n      }\n\n      setDownloading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 15\n    }\n  }, \"Download from IPFS\"), /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      padding: 16,\n      width: 500,\n      margin: \"auto\",\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 15\n    }\n  }, ipfsContent)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"YourCollectible\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ThemeSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 10\n    }\n  }), faucetHint), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    networks: NETWORKS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"left\",\n      left: 40,\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 14\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 12\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  faucetAvailable ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 18\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nwindow.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nexport default App;","map":{"version":3,"sources":["/Users/andrebacellardemiranda/nft-auction/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","JsonRpcProvider","Web3Provider","LinkOutlined","Row","Col","Button","Menu","Alert","Input","List","Card","SwitchD","Modal","InputNumber","Tooltip","Web3Modal","WalletConnectProvider","useUserAddress","format","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useEventListener","useBalance","useExternalContractLoader","Header","Account","Faucet","Ramp","Contract","GasGauge","Address","AddressInput","ThemeSwitch","Transactor","formatEther","parseEther","utils","constants","Hints","ExampleUI","Subgraph","useThemeSwitcher","INFURA_ID","DAI_ADDRESS","DAI_ABI","NETWORK","NETWORKS","StackGrid","ReactJson","assets","BufferList","require","ipfsAPI","ipfs","host","port","protocol","console","log","targetNetwork","DEBUG","STARTING_JSON","getFromIPFS","hashToGet","file","get","path","content","chunk","append","scaffoldEthProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","myMainnetDAIBalance","DAI","balance","transferEvents","modalVisible","setModalVisible","viewModalVisible","setViewModalVisible","auctionDetails","setAuctionDetails","duration","auctionToken","setAuctionToken","viewAuctionToken","setViewAuctionToken","yourBalance","toNumber","yourCollectibles","setYourCollectibles","networkDisplay","zIndex","position","right","top","padding","name","color","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","route","setRoute","window","location","pathname","faucetHint","faucetAvailable","connection","url","indexOf","hostname","faucetClicked","setFaucetClicked","to","value","yourJSON","setYourJSON","sending","setSending","ipfsHash","setIpfsHash","ipfsDownHash","setIpfsDownHash","downloading","setDownloading","ipfsContent","setIpfsContent","yourBid","setYourBid","transferToAddresses","setTransferToAddresses","loadedAssets","setLoadedAssets","updateYourCollectibles","assetUpdate","a","forSale","YourCollectible","id","owner","auctionInfo","tokenId","uriToTokenId","ownerOf","nftAddress","Auction","getTokenAuctionDetails","push","e","startAuction","tokenUri","placeBid","ethAmount","bid","toString","completeAuction","executeSale","cancelAuction","cancelAution","galleryList","slice","cardActions","mintItem","deadline","Date","isEnded","isActive","marginBottom","seller","marginTop","fontWeight","margin","maxBidUser","AddressZero","maxBid","display","alignItems","marginRight","newBid","flexGrow","width","cursor","opacity","external_url","maxWidth","image","description","handleOk","auctionAddress","approve","ethPrice","blockDuration","Math","floor","getTime","createTokenAuction","handleCancel","disabled","newPrice","newDuration","textAlign","paddingBottom","length","item","uri","fontSize","newValue","update","transferFrom","blockNumber","paddingTop","edit","updated_src","add","del","result","JSON","stringify","target","getSigner","logoutOfWeb3Modal","left","bottom","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload","ethereum","on"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport {  JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport {  LinkOutlined } from \"@ant-design/icons\"\nimport \"./App.css\";\nimport {Row, Col, Button, Menu, Alert, Input, List, Card, Switch as SwitchD, Modal, InputNumber, Tooltip} from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { format } from \"date-fns\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address, AddressInput, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { utils, constants } from \"ethers\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nimport StackGrid from \"react-stack-grid\";\nimport ReactJson from 'react-json-view'\nimport assets from './assets.js'\n\nconst { BufferList } = require('bl')\n// https://www.npmjs.com/package/ipfs-http-client\nconst ipfsAPI = require('ipfs-http-client');\nconst ipfs = ipfsAPI({host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n\nconsole.log(\"üì¶ Assets: \",assets)\n\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = false\n\n//EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  \"description\": \"It's actually a bison?\",\n  \"external_url\": \"https://austingriffith.com/portfolio/paintings/\",// <-- this can link to a page for the specific file too\n  \"image\": \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  \"name\": \"Buffalo\",\n  \"attributes\": [\n     {\n       \"trait_type\": \"BackgroundColor\",\n       \"value\": \"green\"\n     },\n     {\n       \"trait_type\": \"Eyes\",\n       \"value\": \"googly\"\n     }\n  ]\n}\n\n//helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path)\n    if (!file.content) continue;\n    const content = new BufferList()\n    for await (const chunk of file.content) {\n      content.append(chunk)\n    }\n    console.log(content)\n    return content\n  }\n}\n\n// üõ∞ providers\nif(DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif(DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n\nfunction App(props) {\n\n  const mainnetProvider = (scaffoldEthProvider && scaffoldEthProvider._network) ? scaffoldEthProvider : mainnetInfura\n  if(DEBUG) console.log(\"üåé mainnetProvider\",mainnetProvider)\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if(DEBUG) console.log(\"üë©‚Äçüíº selected address:\",address)\n\n  // You can warn the user if you would like them to be on a specific network\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\n  if(DEBUG) console.log(\"üè† localChainId\",localChainId)\n\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\n  if(DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId)\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if(DEBUG) console.log(\"üíµ yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if(DEBUG) console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n  if(DEBUG) console.log(\"üìù readContracts\",readContracts)\n\n  // If you want to make üîê write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n  if(DEBUG) console.log(\"üîê writeContracts\",writeContracts)\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  if (DEBUG) console.log(\"üåç DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  if (DEBUG)console.log(\"ü•á myMainnetDAIBalance:\",myMainnetDAIBalance)\n\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts,\"YourCollectible\", \"balanceOf\", [ address ])\n  if (DEBUG) console.log(\"ü§ó balance:\",balance)\n\n  //üìü Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  if (DEBUG) console.log(\"üìü Transfer events:\",transferEvents)\n\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [viewModalVisible, setViewModalVisible] = useState(false);\n  const [auctionDetails, setAuctionDetails] = useState({price: \"\", duration: \"\"});\n  const [auctionToken, setAuctionToken] = useState(\"\");\n  const [viewAuctionToken, setViewAuctionToken] = useState(\"\");\n\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber()\n  const [ yourCollectibles, setYourCollectibles ] = useState()\n\n  // useEffect(()=>{\n  //   const updateYourCollectibles = async () => {\n  //     let collectibleUpdate = []\n  //     for(let tokenIndex=0;tokenIndex<balance;tokenIndex++){\n  //       try{\n  //         console.log(\"GEtting token index\",tokenIndex)\n  //         const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex)\n  //         console.log(\"tokenId\",tokenId)\n  //         const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId)\n  //         console.log(\"tokenURI\",tokenURI)\n  //\n  //         const ipfsHash =  tokenURI.replace(\"https://ipfs.io/ipfs/\",\"\")\n  //         console.log(\"ipfsHash\",ipfsHash)\n  //\n  //         const jsonManifestBuffer = await getFromIPFS(ipfsHash)\n  //\n  //         try{\n  //           const jsonManifest = JSON.parse(jsonManifestBuffer.toString())\n  //           // console.log(\"jsonManifest\",jsonManifest)\n  //           collectibleUpdate.push({ id:tokenId, uri:tokenURI, owner: address, ...jsonManifest })\n  //         }catch(e){console.log(e)}\n  //\n  //       }catch(e){console.log(e)}\n  //     }\n  //     setYourCollectibles(collectibleUpdate)\n  //   }\n  //   updateYourCollectibles()\n  // },[ address, yourBalance ])\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n\n  let networkDisplay = \"\"\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\n        <Alert\n          message={\"‚ö†Ô∏è Wrong Network\"}\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  }else{\n    networkDisplay = (\n      <div style={{zIndex:-1, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute]);\n\n  let faucetHint = \"\"\n  const faucetAvailable = localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname)>=0 && !process.env.REACT_APP_PROVIDER && price > 1;\n\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\n  if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\n    faucetHint = (\n      <div style={{padding:16}}>\n        <Button type={\"primary\"} onClick={()=>{\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          });\n          setFaucetClicked(true)\n        }}>\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    )\n  }\n\n\n  const [ yourJSON, setYourJSON ] = useState( STARTING_JSON );\n  const [ sending, setSending ] = useState()\n  const [ ipfsHash, setIpfsHash ] = useState()\n  const [ ipfsDownHash, setIpfsDownHash ] = useState()\n\n  const [ downloading, setDownloading ] = useState()\n  const [ ipfsContent, setIpfsContent ] = useState()\n  const [yourBid, setYourBid] = useState({});\n\n  const [ transferToAddresses, setTransferToAddresses ] = useState({})\n\n  const [ loadedAssets, setLoadedAssets ] = useState()\n  const updateYourCollectibles = async () => {\n    let assetUpdate = []\n    for(let a in assets){\n      try{\n        const forSale = await readContracts.YourCollectible.forSale(utils.id(a))\n        let owner\n        let auctionInfo\n        if(!forSale){\n          const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(a))\n          owner = await readContracts.YourCollectible.ownerOf(tokenId)\n          const nftAddress = readContracts.YourCollectible.address;\n          auctionInfo = await readContracts.Auction.getTokenAuctionDetails(nftAddress, tokenId);\n        }\n\n\n        assetUpdate.push({id:a,...assets[a],forSale:forSale,owner:owner, auctionInfo})\n      }catch(e){console.log(e)}\n    }\n    setLoadedAssets(assetUpdate)\n  }\n  useEffect(()=>{\n    if(readContracts && readContracts.YourCollectible) updateYourCollectibles()\n  }, [ assets, readContracts, transferEvents ]);\n\n  const startAuction = (tokenUri) => {\n    return async () => {\n      setAuctionToken(tokenUri);\n      setModalVisible(true);\n    }\n  }\n\n  const placeBid = async (tokenUri, ethAmount) => {\n    const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n    const nftAddress = readContracts.YourCollectible.address;\n    await tx( writeContracts.Auction.bid(nftAddress, tokenId, {\n      value: parseEther(ethAmount.toString())\n    }));\n    updateYourCollectibles();\n  }\n\n  const completeAuction = (tokenUri) => {\n    return async () => {\n      const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n      const nftAddress = readContracts.YourCollectible.address;\n      await tx(writeContracts.Auction.executeSale(nftAddress, tokenId));\n      updateYourCollectibles();\n    }\n  }\n\n  const cancelAuction = (tokenUri) => {\n    return async () => {\n      const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(tokenUri));\n      const nftAddress = readContracts.YourCollectible.address;\n      await tx(writeContracts.Auction.cancelAution(nftAddress, tokenId));\n      updateYourCollectibles();\n    }\n  }\n\n  let galleryList = []\n  for(let a in (loadedAssets ? loadedAssets.slice(0, 6) : [])){\n    // console.log(\"loadedAssets\",a,loadedAssets[a])\n\n    let cardActions = []\n    let auctionDetails = [];\n    if(loadedAssets[a].forSale){\n      cardActions.push(\n        <div>\n          <Button onClick={()=>{\n            // console.log(\"gasPrice,\",gasPrice)\n            tx( writeContracts.YourCollectible.mintItem(loadedAssets[a].id,{gasPrice:gasPrice}) )\n          }}>\n            Mint\n          </Button>\n        </div>\n      )\n      auctionDetails.push(null)\n    }else{\n      const { auctionInfo } = loadedAssets[a];\n      const deadline = new Date(auctionInfo.duration * 1000);\n      const isEnded = deadline <= new Date();\n\n      cardActions.push(\n        <div>\n          <div>\n          owned by: <Address\n            address={loadedAssets[a].owner}\n            ensProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            minimized={true}\n          />\n          </div>\n          {!loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].owner && <><Button style={{ marginBottom: \"10px\" }} onClick={startAuction(loadedAssets[a].id)} disabled={address !== loadedAssets[a].owner}>Start auction</Button><br/></>}\n          {loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].auctionInfo.seller && <><Button style={{ marginBottom: \"10px\" }} onClick={completeAuction(loadedAssets[a].id)}>Complete auction</Button><br/></>}\n          {loadedAssets[a].auctionInfo.isActive && address === loadedAssets[a].auctionInfo.seller && <><Button style={{ marginBottom: \"10px\" }} onClick={cancelAuction(loadedAssets[a].id)}>Cancel auction</Button><br/></>}\n        </div>\n      )\n\n      auctionDetails.push(auctionInfo.isActive ? (\n          <div style={{ marginTop: \"20px\" }}>\n            <p style={{ fontWeight: \"bold\" }}>Auction is in progress</p>\n            <p style={{ margin: 0, marginBottom: \"2px\"}}>Minimal price is {utils.formatEther(auctionInfo.price)} ETH</p>\n            <p style={{ marginTop: 0 }}>{!isEnded ? `Auction ends at ${format(deadline, \"MMMM dd, hh:mm:ss\")}` : 'Auction has already ended'}</p>\n            <div>\n              {auctionInfo.maxBidUser === constants.AddressZero ? \"Highest bid was not made yet\" : <div>Highest bid by: <Address\n                  address={auctionInfo.maxBidUser}\n                  ensProvider={mainnetProvider}\n                  blockExplorer={blockExplorer}\n                  minimized={true}\n              /><p>{utils.formatEther(auctionInfo.maxBid)} ETH</p></div>}\n            </div>\n\n            <div>\n            <div style={{display: \"flex\", alignItems: \"center\", marginTop: \"20px\"}}>\n              <p style={{margin:0, marginRight: \"15px\"}}>Your bid in ETH: </p>\n              <InputNumber placeholder=\"0.1\" value={yourBid[loadedAssets[a].id]} onChange={newBid => setYourBid({...yourBid, [loadedAssets[a].id]: newBid})} style={{ flexGrow: 1 }}/>\n            </div>\n              <Button style={{marginTop: \"7px\"}} onClick={() => placeBid(loadedAssets[a].id, yourBid[loadedAssets[a].id])} disabled={!yourBid[loadedAssets[a].id] || isEnded}>Place a bid</Button>\n            </div>\n\n          </div>\n      ) : null);\n    }\n\n    galleryList.push(\n        <>\n      <Card style={{width:300}} key={loadedAssets[a].name}\n        actions={cardActions}\n        title={(\n          <div>\n            {loadedAssets[a].name} <a style={{cursor:\"pointer\",opacity:0.33}} href={loadedAssets[a].external_url} target=\"_blank\"><LinkOutlined /></a>\n          </div>\n        )}\n      >\n        <img style={{maxWidth:130}} src={loadedAssets[a].image}/>\n        <div style={{opacity:0.77}}>\n          {loadedAssets[a].description}\n        </div>\n        {auctionDetails}\n      </Card>\n          </>\n    )\n  }\n\n\n  const handleOk = async () => {\n    setModalVisible(false);\n    const { price, duration } = auctionDetails;\n    const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(auctionToken));\n\n    const auctionAddress = readContracts.Auction.address;\n    const nftAddress = readContracts.YourCollectible.address;\n    await writeContracts.YourCollectible.approve(auctionAddress, tokenId);\n\n    const ethPrice = utils.parseEther(price.toString());\n    const blockDuration = Math.floor(new Date().getTime() / 1000) + duration;\n\n    await tx(writeContracts.Auction.createTokenAuction(nftAddress, tokenId, ethPrice, blockDuration, { gasPrice }));\n\n    const auctionInfo = await readContracts.Auction.getTokenAuctionDetails(nftAddress, tokenId);\n    console.log('auctionInfo', { auctionInfo });\n  }\n\n  const handleCancel = () => {\n    setModalVisible(false);\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Modal title=\"Start auction\" visible={modalVisible} onOk={handleOk} onCancel={handleCancel} okButtonProps={{ disabled: !auctionDetails.price || !auctionDetails.duration }} okText=\"Start\">\n        <div style={{display: \"flex\", alignItems: \"center\"}}>\n          <p style={{margin:0, marginRight: \"15px\"}}>ETH price (minimal bid): </p>\n          <InputNumber placeholder=\"0.1\" value={auctionDetails.price} onChange={newPrice => setAuctionDetails({...auctionDetails, price: newPrice})} style={{ flexGrow: 1 }}/>\n        </div>\n        <br/>\n        <div style={{display: \"flex\", alignItems: \"center\"}}>\n          <p style={{margin:0, marginRight: \"15px\"}}>Duration in seconds: </p>\n          <InputNumber placeholder=\"3600\" value={auctionDetails.duration} onChange={newDuration => setAuctionDetails({...auctionDetails, duration: newDuration})} style={{ flexGrow: 1 }}/>\n        </div>\n      </Modal>\n\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">Gallery</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debugcontracts\">\n            <Link onClick={()=>{setRoute(\"/debugcontracts\")}} to=\"/debugcontracts\">Debug Contracts</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{ maxWidth:1024, margin: \"auto\", marginTop:32, paddingBottom:56 }}>\n              <Button disabled={galleryList.length === 0} onClick={updateYourCollectibles} style={{marginBottom: \"25px\"}}>Update collectibles</Button>\n\n              <StackGrid\n                columnWidth={300}\n                gutterWidth={16}\n                gutterHeight={16}\n              >\n                {galleryList}\n              </StackGrid>\n            </div>\n\n          </Route>\n\n          <Route path=\"/yourcollectibles\">\n            <div style={{ width:640, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={(item) => {\n                  const id = item.id.toNumber()\n                  return (\n                    <List.Item key={id+\"_\"+item.uri+\"_\"+item.owner}>\n                      <Card title={(\n                        <div>\n                          <span style={{fontSize:16, marginRight:8}}>#{id}</span> {item.name}\n                        </div>\n                      )}>\n                        <div><img src={item.image} style={{maxWidth:150}} /></div>\n                        <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner: <Address\n                            address={item.owner}\n                            ensProvider={mainnetProvider}\n                            blockExplorer={blockExplorer}\n                            fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={(newValue)=>{\n                            let update = {}\n                            update[id] = newValue\n                            setTransferToAddresses({ ...transferToAddresses, ...update})\n                          }}\n                        />\n                        <Button onClick={()=>{\n                          console.log(\"writeContracts\",writeContracts)\n                          tx( writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id) )\n                        }}>\n                          Transfer\n                        </Button>\n                      </div>\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={(item) => {\n                  return (\n                    <List.Item key={item[0]+\"_\"+item[1]+\"_\"+item.blockNumber+\"_\"+item[2].toNumber()}>\n                      <span style={{fontSize:16, marginRight:8}}>#{item[2].toNumber()}</span>\n                      <Address\n                          address={item[0]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      /> =>\n                      <Address\n                          address={item[1]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      />\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop:32, width:740, margin:\"auto\", textAlign:\"left\" }}>\n              <ReactJson\n                style={{ padding:8 }}\n                src={yourJSON}\n                theme={\"pop\"}\n                enableClipboard={false}\n                onEdit={(edit,a)=>{\n                  setYourJSON(edit.updated_src)\n                }}\n                onAdd={(add,a)=>{\n                  setYourJSON(add.updated_src)\n                }}\n                onDelete={(del,a)=>{\n                  setYourJSON(del.updated_src)\n                }}\n              />\n            </div>\n\n            <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                console.log(\"UPLOADING...\",yourJSON)\n                setSending(true)\n                setIpfsHash()\n                const result = await ipfs.add(JSON.stringify(yourJSON))//addToIPFS(JSON.stringify(yourJSON))\n                if(result && result.path) {\n                  setIpfsHash(result.path)\n                }\n                setSending(false)\n                console.log(\"RESULT:\",result)\n            }}>Upload to IPFS</Button>\n\n            <div  style={{padding:16,paddingBottom:150}}>\n              {ipfsHash}\n            </div>\n\n          </Route>\n          <Route path=\"/ipfsdown\">\n              <div style={{ paddingTop:32, width:740, margin:\"auto\" }}>\n                <Input\n                  value={ipfsDownHash}\n                  placeHolder={\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"}\n                  onChange={(e)=>{\n                    setIpfsDownHash(e.target.value)\n                  }}\n                />\n              </div>\n              <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                  console.log(\"DOWNLOADING...\",ipfsDownHash)\n                  setDownloading(true)\n                  setIpfsContent()\n                  const result = await getFromIPFS(ipfsDownHash)//addToIPFS(JSON.stringify(yourJSON))\n                  if(result && result.toString) {\n                    setIpfsContent(result.toString())\n                  }\n                  setDownloading(false)\n              }}>Download from IPFS</Button>\n\n              <pre  style={{padding:16, width:500, margin:\"auto\",paddingBottom:150}}>\n                {ipfsContent}\n              </pre>\n          </Route>\n          <Route path=\"/debugcontracts\">\n              <Contract\n                name=\"YourCollectible\"\n                signer={userProvider.getSigner()}\n                provider={localProvider}\n                address={address}\n                blockExplorer={blockExplorer}\n              />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n         {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={8}>\n             <Ramp price={price} address={address} networks={NETWORKS}/>\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"left\", left: 40, opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n               /*  if the local provider has a signer, let's show the faucet:  */\n               faucetAvailable ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\nexport default App;"]},"metadata":{},"sourceType":"module"}